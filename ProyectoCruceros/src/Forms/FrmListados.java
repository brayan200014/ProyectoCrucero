/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

/**
 *
 * @author BRAYAN HERNADEZ
 */
import Clases.ClsConexion;
import Reservaciones.ClsMetodosReservaciones;
import Reservaciones.ClsReservaciones;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import java.sql.*;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

public class FrmListados extends javax.swing.JPanel {

    /**
     * Creates new form FrmListados
     */
    public FrmListados() {
        initComponents();
        cargarTablaEmpleados();
        cargarTablaReservaciones();
        cargarTablaClientes();
        cargardatosVentas();
    }

      private TableRowSorter TRSFiltro;
        
      Connection con = ClsConexion.obtenerConexion();
    PreparedStatement ps = null;
    ResultSet rs;
    ResultSetMetaData rsmd;
      ClsReservaciones reser = new ClsReservaciones();
    ClsMetodosReservaciones metreser = new ClsMetodosReservaciones();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jToolBar4 = new javax.swing.JToolBar();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtBuscarVentas = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableVentas = new javax.swing.JTable();
        btnVerDetalle = new javax.swing.JButton();
        jToolBar5 = new javax.swing.JToolBar();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        txtBusqueda = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblMostrarCliente = new javax.swing.JTable();
        jToolBar1 = new javax.swing.JToolBar();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtFiltro = new javax.swing.JTextField();
        btnCancelar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbReservaciones = new javax.swing.JTable();
        jToolBar2 = new javax.swing.JToolBar();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMostrarEmpleados = new javax.swing.JTable();
        txtbuscarident = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtbuscarnombre = new javax.swing.JTextField();

        setBackground(new java.awt.Color(96, 203, 249));

        jTabbedPane1.setBackground(new java.awt.Color(96, 203, 249));
        jTabbedPane1.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N

        jToolBar4.setBackground(new java.awt.Color(96, 203, 249));
        jToolBar4.setRollover(true);
        jToolBar4.setAutoscrolls(true);
        jToolBar4.setBorderPainted(false);

        jPanel5.setBackground(new java.awt.Color(96, 203, 249));

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel4.setText("Buscar:");

        txtBuscarVentas.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txtBuscarVentas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarVentasKeyTyped(evt);
            }
        });

        tableVentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo Venta", "Fecha Venta", "Cliente", "Codigo Viaje", "Empleado", "Subtotal", "ISV", "Imp. Portuario", "Propina", "Descuento", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableVentas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane4.setViewportView(tableVentas);

        btnVerDetalle.setBackground(new java.awt.Color(12, 69, 104));
        btnVerDetalle.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        btnVerDetalle.setForeground(new java.awt.Color(255, 255, 255));
        btnVerDetalle.setText("Ver Detalle");
        btnVerDetalle.setBorderPainted(false);
        btnVerDetalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerDetalleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 870, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(btnVerDetalle, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(339, 339, 339))))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(21, 21, 21)
                    .addComponent(jLabel4)
                    .addGap(35, 35, 35)
                    .addComponent(txtBuscarVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 773, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(32, Short.MAX_VALUE)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(57, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnVerDetalle, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(31, 31, 31)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtBuscarVentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addContainerGap(451, Short.MAX_VALUE)))
        );

        jToolBar4.add(jPanel5);

        jTabbedPane1.addTab("Ventas", jToolBar4);

        jToolBar5.setBackground(new java.awt.Color(96, 203, 249));
        jToolBar5.setRollover(true);
        jToolBar5.setBorderPainted(false);

        jPanel3.setBackground(new java.awt.Color(96, 203, 249));

        jPanel4.setBackground(new java.awt.Color(96, 203, 249));

        txtBusqueda.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyTyped(evt);
            }
        });

        tblMostrarCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nombre", "Apellido", "Identidad", "Telefono", "Genero", "Nacimiento", "Correo", "Direccion", "Nacionalidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMostrarCliente.setColumnSelectionAllowed(true);
        tblMostrarCliente.getTableHeader().setReorderingAllowed(false);
        tblMostrarCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMostrarClienteMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblMostrarCliente);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(70, 70, 70))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(211, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jToolBar5.add(jPanel3);

        jTabbedPane1.addTab("Clientes", jToolBar5);

        jToolBar1.setBackground(new java.awt.Color(96, 203, 249));
        jToolBar1.setRollover(true);
        jToolBar1.setBorderPainted(false);

        jPanel2.setBackground(new java.awt.Color(96, 203, 249));

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel2.setText("Búsqueda");

        txtFiltro.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txtFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFiltroKeyTyped(evt);
            }
        });

        btnCancelar.setBackground(new java.awt.Color(12, 69, 104));
        btnCancelar.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setText("Cancelar Reservación");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        tbReservaciones.setBackground(new java.awt.Color(96, 203, 249));
        tbReservaciones.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tbReservaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código Viaje", "Destino", "Codigo Camarote", "Tipo Camarote", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbReservaciones.setAutoscrolls(false);
        tbReservaciones.setSelectionBackground(new java.awt.Color(12, 69, 104));
        tbReservaciones.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbReservaciones.getTableHeader().setResizingAllowed(false);
        tbReservaciones.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tbReservaciones);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(btnCancelar)))
                .addGap(280, 280, 280))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(131, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(7, 7, 7)
                .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(130, Short.MAX_VALUE))
        );

        jToolBar1.add(jPanel2);

        jTabbedPane1.addTab("Reservaciones", jToolBar1);

        jToolBar2.setBackground(new java.awt.Color(96, 203, 249));
        jToolBar2.setRollover(true);
        jToolBar2.setBorderPainted(false);

        jPanel1.setBackground(new java.awt.Color(96, 203, 249));

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel3.setText("Identidad:");

        tblMostrarEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nombre", "Apellido", "Nacimiento", "Identidad", "Sexo", "Telefono", "Correo", "Direccion", "Codigo Puesto", "Estado", "Nacionalidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMostrarEmpleados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMostrarEmpleadosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMostrarEmpleados);

        txtbuscarident.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        txtbuscarident.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbuscaridentActionPerformed(evt);
            }
        });
        txtbuscarident.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtbuscaridentKeyTyped(evt);
            }
        });

        jLabel1.setText("Nombre:");

        txtbuscarnombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtbuscarnombreKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 884, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtbuscarident, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtbuscarnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtbuscarident, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(txtbuscarnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(64, 64, 64)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(184, Short.MAX_VALUE))
        );

        jToolBar2.add(jPanel1);

        jTabbedPane1.addTab("Empleados", jToolBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtbuscarnombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbuscarnombreKeyTyped
        char letra = evt.getKeyChar();

        if (Character.isDigit(letra)) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Solo puede ingresar letras", "WARNING", JOptionPane.WARNING_MESSAGE);
        }

        txtbuscarnombre.addKeyListener(new KeyAdapter() {

            public void keyReleased(final KeyEvent e) {
                String cadena = (txtbuscarnombre.getText());
                txtbuscarnombre.setText(cadena);
                FiltroN();
            }

        });
        TRSFiltro = new TableRowSorter(tblMostrarEmpleados.getModel());
        tblMostrarEmpleados.setRowSorter(TRSFiltro);
    }//GEN-LAST:event_txtbuscarnombreKeyTyped

    private void txtbuscaridentKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbuscaridentKeyTyped
        char numero = evt.getKeyChar();
        if ((numero < '0' || numero > '9') && numero != evt.VK_BACK_SPACE) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Solo puede ingresar numeros", "WARNING", JOptionPane.WARNING_MESSAGE);
        }

        txtbuscarident.addKeyListener(new KeyAdapter() {

            public void keyReleased(final KeyEvent e) {
                String cadena = (txtbuscarident.getText());
                txtbuscarident.setText(cadena);
                Filtro();
            }

        });
        TRSFiltro = new TableRowSorter(tblMostrarEmpleados.getModel());
        tblMostrarEmpleados.setRowSorter(TRSFiltro);
    }//GEN-LAST:event_txtbuscaridentKeyTyped

    private void txtbuscaridentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbuscaridentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbuscaridentActionPerformed

    private void tblMostrarEmpleadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMostrarEmpleadosMouseClicked

    }//GEN-LAST:event_tblMostrarEmpleadosMouseClicked

    private void busqueda() {
        int columnaTabla = 1;
        TRSFiltro.setRowFilter(RowFilter.regexFilter("(?i)" + txtFiltro.getText(), columnaTabla));
    }

    private void txtFiltroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroKeyTyped
        char c = evt.getKeyChar();

        if (Character.isDigit(c)) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Sólo se admiten letras", "WARNING", JOptionPane.WARNING_MESSAGE);
        } else {
            txtFiltro.addKeyListener(new KeyAdapter() {

                @Override
                public void keyReleased(final KeyEvent e) {
                    String cadena = (txtFiltro.getText());
                    txtFiltro.setText(cadena);
                    busqueda();
                }
            });

            TRSFiltro = new TableRowSorter(tbReservaciones.getModel());
            tbReservaciones.setRowSorter(TRSFiltro);
        }
    }//GEN-LAST:event_txtFiltroKeyTyped

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed

        if (tbReservaciones.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione una fila para eliminar", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            int fila = tbReservaciones.getSelectedRow();
            reser.setEstado(tbReservaciones.getValueAt(fila, 4).toString());
            String estado = reser.getEstado();

            if (estado == "Cancelado") {
                JOptionPane.showMessageDialog(null, "Viaje ya antes cancelado", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else {
                reser.setCodigo(Integer.parseInt(tbReservaciones.getValueAt(fila, 0).toString()));
                metreser.cancelar();
                cargarTablaReservaciones();
            }

        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtBusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyTyped
        char letra = evt.getKeyChar();

        if (Character.isDigit(letra)) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Ingrese solamente letras", "Warning", JOptionPane.WARNING_MESSAGE);
        }

        txtBusqueda.addKeyListener (new KeyAdapter(){

            public void keyReleased (final KeyEvent e)
            {
                String cadena = (txtBusqueda.getText());
                txtBusqueda.setText(cadena);
                FiltroCliente();
            }

        });
        TRSFiltro = new TableRowSorter(tblMostrarCliente.getModel());
        tblMostrarCliente.setRowSorter(TRSFiltro);

    }//GEN-LAST:event_txtBusquedaKeyTyped

     private void cargarTablaClientes() {
        DefaultTableModel modelotabla = (DefaultTableModel) tblMostrarCliente.getModel();
        modelotabla.setRowCount(0);

        PreparedStatement ps;
        ResultSet rs;
        ResultSetMetaData rsmd;
        int columnas;
        try {
            Connection con = ClsConexion.obtenerConexion();
            ps = con.prepareStatement("SELECT codigo_cliente, nombre, apellido,"
                    + "identidad, telefono, sexo, fecha_nacimiento, correo_electronico, "
                    + "direccion,"
                    + "nacionalidad FROM Clientes");
            rs = ps.executeQuery();
            rsmd = rs.getMetaData();
            columnas = rsmd.getColumnCount();

            while (rs.next()) {
                Object[] fila = new Object[columnas];
                for (int i = 0; i < columnas; i++) {
                    fila[i] = rs.getObject(i + 1);
                }
                modelotabla.addRow(fila);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error Carga de Datos" + ex);
        } 
    }
    
    public void FiltroCliente(){  
        int columnaTabla = 1;
        TRSFiltro.setRowFilter(RowFilter.regexFilter(txtBusqueda.getText(),columnaTabla));
    }
    private void tblMostrarClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMostrarClienteMouseClicked

    }//GEN-LAST:event_tblMostrarClienteMouseClicked

       private void cargardatosVentas()
    {
       int columnas;
      DefaultTableModel modelo= (DefaultTableModel) tableVentas.getModel();
      modelo.setRowCount(0);
        try 
         {
             Connection con= ClsConexion.obtenerConexion();
            ps=con.prepareStatement("execute cargarDatosVentas");
             rs=ps.executeQuery();
             rsmd= rs.getMetaData();
             columnas= rsmd.getColumnCount();
             while(rs.next())
             {
                Object [] fila= new Object[columnas];
                 for(int i=0; i<columnas; i++)
                 {
                     fila[i]=rs.getObject(i+1);
                 }
                 modelo.addRow(fila);
             }
         }
         catch(SQLException ex)
         {
              JOptionPane.showMessageDialog(null, "Ocurrio un error al extraer los datos"+ex, "Warning", JOptionPane.WARNING_MESSAGE);
         }
        
    }
    
    public void FiltroListadoVentas()
    {
        int columnas= 2;
                TRSFiltro.setRowFilter(RowFilter.regexFilter(txtBuscarVentas.getText(),columnas));
    }
    
    private void txtBuscarVentasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarVentasKeyTyped
        // TODO add your handling code here:
        txtBuscarVentas.addKeyListener(new KeyAdapter()
            {
                @Override
                public void keyReleased(final KeyEvent e) {
                    String cadena = (txtBuscarVentas.getText());
                    txtBuscarVentas.setText(cadena);
                    FiltroListadoVentas();
                }
            });
            TRSFiltro= new TableRowSorter(tableVentas.getModel());
            tableVentas.setRowSorter(TRSFiltro);
    }//GEN-LAST:event_txtBuscarVentasKeyTyped

    private void btnVerDetalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerDetalleActionPerformed
        // TODO add your handling code here:
        if(tableVentas.getSelectedRow()==-1)
        {
            JOptionPane.showMessageDialog(null, "Debe Seleccionar una fila");
        }
        else
        {
            int codigo= Integer.parseInt(tableVentas.getValueAt(tableVentas.getSelectedRow(), 0).toString());
            String identidad= tableVentas.getValueAt(tableVentas.getSelectedRow(), 2).toString();
            FrmDetalleVentas detalle= new FrmDetalleVentas(codigo, identidad);
            detalle.setVisible(true);
        }

    }//GEN-LAST:event_btnVerDetalleActionPerformed

     private void cargarTablaReservaciones() {
        DefaultTableModel modeloTabla = (DefaultTableModel) tbReservaciones.getModel();
        modeloTabla.setRowCount(0);

        int columnas;

        int[] anchos = {10, 50, 5, 100, 20};
        for (int i = 0; i < tbReservaciones.getColumnCount(); i++) {
            tbReservaciones.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
        }

        try {
            Connection cn = ClsConexion.obtenerConexion();
            ps = cn.prepareStatement("select r.codigo_viaje,\n"
                    + "dt.descripcion,\n"
                    + "c.codigo_camarote,\n"
                    + "tc.descripcion,\n"
                    + "\n"
                    + "case when r.estado = 1 then 'Confirmado'\n"
                    + "else\n"
                    + "'Cancelado' end as estado \n"
                    + "\n"
                    + "from [dbo].[Viajes] v join [dbo].[Reservaciones] r\n"
                    + "on r.codigo_viaje = v.codigo_viaje\n"
                    + "join [dbo].[Camarote] c\n"
                    + "on c.codigo_camarote = r.codigo_camarote\n"
                    + "join [dbo].[Tipo_Camarote] tc \n"
                    + "on tc.codigo_tipo_camarote = c.codigo_tipo_camarote\n"
                    + "join [dbo].[Detalle_destinos] dd\n"
                    + "on v.codigo_viaje = dd.codigo_viaje\n"
                    + "join [dbo].[Puertos-Destinos] pd\n"
                    + "on pd.codigo_puerto = dd.codigo_puerto\n"
                    + "join [dbo].[Destinos_Turisticos] dt\n"
                    + "on dt.codigo_destino = pd.codigo_destino");

            rs = ps.executeQuery();
            rsmd = rs.getMetaData();
            columnas = rsmd.getColumnCount();

            while (rs.next()) {
                Object[] fila = new Object[columnas];

                for (int indice = 0; indice < columnas; indice++) {
                    fila[indice] = rs.getObject(indice + 1);
                }
                modeloTabla.addRow(fila);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    
     private void cargarTablaEmpleados() {
        DefaultTableModel modelotabla = (DefaultTableModel) tblMostrarEmpleados.getModel();
        modelotabla.setRowCount(0);

        int columnas;
        try {
            ps = con.prepareStatement("SELECT * FROM Empleados");
            rs = ps.executeQuery();
            rsmd = rs.getMetaData();
            columnas = rsmd.getColumnCount();

            while (rs.next()) {
                Object[] fila = new Object[columnas];
                for (int i = 0; i < columnas; i++) {
                    fila[i] = rs.getObject(i + 1);
                }
                modelotabla.addRow(fila);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error Carga de Datos" + ex);
        }
    }

    public void Filtro() {
        int columnaTabla = 4;
        TRSFiltro.setRowFilter(RowFilter.regexFilter(txtbuscarident.getText(), columnaTabla));
    }

    public void FiltroN() {

        int columNombre = 1;
        TRSFiltro.setRowFilter(RowFilter.regexFilter(txtbuscarnombre.getText(), columNombre));
    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnVerDetalle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JToolBar jToolBar4;
    private javax.swing.JToolBar jToolBar5;
    private javax.swing.JTable tableVentas;
    private javax.swing.JTable tbReservaciones;
    private javax.swing.JTable tblMostrarCliente;
    private javax.swing.JTable tblMostrarEmpleados;
    private javax.swing.JTextField txtBuscarVentas;
    private javax.swing.JTextField txtBusqueda;
    private javax.swing.JTextField txtFiltro;
    private javax.swing.JTextField txtbuscarident;
    private javax.swing.JTextField txtbuscarnombre;
    // End of variables declaration//GEN-END:variables
}
